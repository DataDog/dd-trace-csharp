version: '3'
services:
  redis:
    image: redis:4-alpine
    command: redis-server --bind 0.0.0.0
    ports:
    - "127.0.0.1:6379:6379"

  mongo:
    image: mongo:4.0.9
    ports:
      - "127.0.0.1:27017:27017"
    command: mongod

  elasticsearch6:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    ports:
    - "127.0.0.1:9200:9200"
    - "127.0.0.1:9300:9300"
    environment:
    - discovery.type=single-node

  elasticsearch5:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.16
    ports:
    - "127.0.0.1:9205:9200"
    - "127.0.0.1:9305:9300"
    environment:
    - discovery.type=single-node

  postgres:
    image: postgres:10.5-alpine
    environment:
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_DB=postgres
    ports:
    - "127.0.0.1:5432:5432"

  sqlserver:
    image: microsoft/mssql-server-linux:latest
    ports:
    - "127.0.0.1:1433:1433"
    environment:
    - ACCEPT_EULA=Y
    - SA_PASSWORD=Strong!Passw0rd

  build:
    build:
      context: ./
      dockerfile: ./docker/dotnet.dockerfile
    image: datadog-dotnet
    command: /project/docker/build.sh
    volumes:
    - ./:/project

  package:
    build:
      context: ./
      dockerfile: ./docker/package.dockerfile
    image: datadog-package
    command: /project/docker/package.sh
    volumes:
    - ./:/project

  Datadog.Trace.ClrProfiler.Native:
    build:
      context: ./
      dockerfile: ./docker/native.dockerfile
    image: datadog-native
    command: /project/docker/Datadog.Trace.ClrProfiler.Native.sh
    volumes:
    - ./:/project

  Samples.RedisCore:
    build:
      context: ./
      dockerfile: ./docker/dotnet.dockerfile
    image: datadog-dotnet
    command: bash -c "/project/docker/with-profiler-logs.bash wait-for-it redis:6379 -- /project/docker/with-profiler.bash dotnet /project/samples/Samples.RedisCore/bin/Release/netcoreapp2.1/publish/Samples.RedisCore.dll"
    volumes:
    - ./:/project
    environment:
    - REDIS_HOST=redis
    depends_on:
    - redis

  Samples.Elasticsearch:
    build:
      context: ./
      dockerfile: ./docker/dotnet.dockerfile
    image: datadog-dotnet
    command: bash -c "/project/docker/with-profiler-logs.bash wait-for-it elasticsearch6:9200 -- /project/docker/with-profiler.bash dotnet /project/samples/Samples.Elasticsearch/bin/Release/netcoreapp2.1/publish/Samples.Elasticsearch.dll"
    volumes:
    - ./:/project
    environment:
    - ELASTICSEARCH6_HOST=elasticsearch6:9200
    depends_on:
    - elasticsearch6


  Samples.Elasticsearch.V5:
    build:
      context: ./
      dockerfile: ./docker/dotnet.dockerfile
    image: datadog-dotnet
    command: bash -c "/project/docker/with-profiler-logs.bash wait-for-it elasticsearch5:9205 -- /project/docker/with-profiler.bash dotnet /project/samples/Samples.Elasticsearch.V5/bin/Release/netcoreapp2.1/publish/Samples.Elasticsearch.V5.dll"
    volumes:
    - ./:/project
    environment:
    - ELASTICSEARCH5_HOST=elasticsearch5:9205
    depends_on:
    - elasticsearch5

  Samples.SqlServer:
    build:
      context: ./
      dockerfile: ./docker/dotnet.dockerfile
    image: datadog-dotnet
    command: bash -c "/project/docker/with-profiler-logs.bash wait-for-it sqlserver:1433 -- /project/docker/with-profiler.bash dotnet /project/samples/Samples.SqlServer/bin/Release/netcoreapp2.1/publish/Samples.SqlServer.dll"
    volumes:
    - ./:/project
    environment:
    - SQLSERVER_CONNECTION_STRING=Server=sqlserver;Database=BlogDatabase;User=sa;Password=Strong!Passw0rd
    depends_on:
    - sqlserver

  Samples.Npgsql:
    build:
      context: ./
      dockerfile: ./docker/dotnet.dockerfile
    image: datadog-dotnet
    command: bash -c "/project/docker/with-profiler-logs.bash wait-for-it postgres:5432 -- /project/docker/with-profiler.bash dotnet /project/samples/Samples.NpgSql/bin/Release/netcoreapp2.1/publish/Samples.NpgSql.dll"
    volumes:
    - ./:/project
    environment:
    - POSTGRES_HOST=postgres
    depends_on:
    - postgres

  Samples.MongoDB:
    build:
      context: ./
      dockerfile: ./docker/dotnet.dockerfile
    image: datadog-dotnet
    command: bash -c "/project/docker/with-profiler-logs.bash wait-for-it mongo:27017 -- /project/docker/with-profiler.bash dotnet /project/samples/Samples.MongoDB/bin/Release/netcoreapp2.1/publish/Samples.MongoDB.dll"
    volumes:
    - ./:/project
    depends_on:
    - mongo

  Datadog.Trace.ClrProfiler.IntegrationTests:
    build:
      context: ./
      dockerfile: ./docker/dotnet.dockerfile
    image: datadog-dotnet
    command: /project/docker/Datadog.Trace.ClrProfiler.IntegrationTests.sh
    volumes:
    - ./:/project
    environment:
    - MONGO_HOST=mongo
    - REDIS_HOST=redis
    - ELASTICSEARCH6_HOST=elasticsearch6:9200
    - ELASTICSEARCH5_HOST=elasticsearch5:9205
    - SQLSERVER_CONNECTION_STRING=Server=sqlserver;Database=BlogDatabase;User=sa;Password=Strong!Passw0rd
    - POSTGRES_HOST=postgres
    depends_on:
    - redis
    - elasticsearch6
    - elasticsearch5
    - sqlserver
    - mongo
    - postgres
