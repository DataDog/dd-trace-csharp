trigger: none
pr: none

schedules:
- cron: "0 3 * * *"
  displayName: Daily 3am (UTC) build
  branches:
    include:
    - master
  always: true

variables:
  ddApiKey: $(DD_API_KEY)
  DD_DOTNET_TRACER_MSBUILD:

# Declare the datadog agent as a resource to be used as a pipeline service
resources:
  containers:
  - container: dd_agent
    image: datadog/agent
    ports:
    - 8126:8126
    env:
      DD_API_KEY: $(ddApiKey)
      DD_INSIDE_CI: true

stages:
- stage: run_tests
  jobs:
  - job: EFCore
    strategy:
      matrix:
        Major5:
          tagName: v5.0.5
        # Major3:
        #   tagName: v3.1.14

    pool:
      vmImage: windows-2019

    # Enable the Datadog Agent service for this job
    services:
      dd_agent: dd_agent

    steps:

    - checkout: none

    # - download: current
    #   artifact: runner-dotnet-tool
    #   patterns: '**/*.nupkg'

    # - script: dotnet tool install --global --add-source $(Pipeline.Workspace)/runner-dotnet-tool dd-trace
    #   displayName: Install dd-trace tool

    - script: |
        git clone https://github.com/dotnet/efcore.git
        cd efcore
        git checkout $(tagName)
      displayName: Checkout dotnet/efcore at tag $(tagName)

    - powershell: |
        Import-Module "$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"
        Start-CosmosDbEmulator
      displayName: Start Cosmos Emulator

    - script: restore.cmd
      displayName: Restore
      workingDirectory: $(System.DefaultWorkingDirectory)/efcore

    - script: dotnet test test\EFCore.Cosmos.FunctionalTests --logger trx;LogFileName=EFCore.Cosmos.FunctionalTests.windows.$(tagName).trx --results-directory test/results"
      displayName: Test on Cosmos
      workingDirectory: $(System.DefaultWorkingDirectory)/efcore

    - task: PublishTestResults@2
      displayName: publish test results
      inputs:
        testResultsFormat: VSTest
        testResultsFiles: $(System.DefaultWorkingDirectory)/efcore/test/results/**/*.trx
        testRunTitle: EFCore-windows-$(tagName)
      condition: succeededOrFailed()